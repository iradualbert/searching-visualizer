{"version":3,"sources":["components/main/Header.js","components/main/Bar.jsx","components/pointer/index.jsx","components/intro/index.jsx","components/main/Status.jsx","algorithms/utils.js","algorithms/linearSearch.js","algorithms/binarySearch.js","algorithms/jumpSearch.js","algorithms/exponentialSearch.js","components/main/index.jsx","App.js","index.js"],"names":["Header","props","generateNewArray","linearSearch","jumpSearch","exponentialSearch","binarySearch","size","target","isRunning","handleChange","setTarget","searchDisabled","className","disabled","onClick","htmlFor","style","marginTop","color","name","type","id","value","min","max","onChange","placeholder","event","Bar","barWidth","height","width","fontSize","Math","Pointer","left","pointerType","useState","open","setOpen","handleClose","Modal","show","onHide","animation","closeButton","Title","Body","Footer","Button","variant","Status","results","map","result","index","key","sleep","ms","a","Promise","resolve","setTimeout","calculatePosition","n","floor","arr","setPointers","startIndex","length","currentDiv","i","document","getElementById","delay","classList","add","remove","k","leftPointer","rightPointer","right","mid","midDiv","leftDiv","rightDiv","step","sqrt","start","end","backgroundColor","undefined","generateRandomArray","push","generateRandomNumber","sortedArr","slice","sort","b","random","Board","state","speed","midPointer","setState","parseInt","resetPointers","this","position","marginLeft","Fragment","React","Component","App","ReactDOM","render","StrictMode"],"mappings":"qTA0EeA,G,MAxEA,SAAAC,GAAU,IAEjBC,EAUAD,EAVAC,iBACAC,EASAF,EATAE,aACAC,EAQAH,EARAG,WACAC,EAOAJ,EAPAI,kBACAC,EAMAL,EANAK,aACAC,EAKAN,EALAM,KACAC,EAIAP,EAJAO,OACAC,EAGAR,EAHAQ,UACAC,EAEAT,EAFAS,aACAC,EACAV,EADAU,UAEEC,EAAiBH,KAAeD,GAAU,IAAiB,KAAXA,EAEtD,OACI,yBAAKK,UAAU,wBACX,4BAAQA,UAAU,kBAAkBC,SAAUL,EAAWM,QAASb,GAAlE,yBACA,2BAAOc,QAAQ,OAAOC,MAAO,CAAEC,UAAW,EAAGC,MAAO,UAApD,cACA,2BACIL,SAAUL,EACVW,KAAK,OACLP,UAAU,SACVQ,KAAK,QACLC,GAAG,OACHC,MAAOhB,EACPiB,IAAI,KACJC,IAAI,MACJC,SAAUhB,IAEd,6BACI,2BACII,SAAUL,EACVY,KAAK,SACLG,IAAI,IACJG,YAAY,iBACZd,UAAU,eACVU,MAAOf,EACPkB,SAAU,SAACE,GAAD,OAAWjB,EAAUiB,EAAMpB,OAAOe,WAGpD,4BACIV,UAAU,eACVC,SAAUF,EACVG,QAASZ,GAHb,iBAOA,4BACIU,UAAU,eACVC,SAAUF,EACVG,QAASX,GAHb,gBAMA,4BACIS,UAAU,eACVC,SAAUF,EACVG,QAAST,GAHb,iBAQA,4BACIO,UAAU,eACVC,SAAUF,EACVG,QAASV,GAHb,yBCtCGwB,EAxBH,SAAC5B,GAAW,IAEhBsB,EAGAtB,EAHAsB,MACAD,EAEArB,EAFAqB,GACAQ,EACA7B,EADA6B,SAGJ,OACI,yBAAKjB,UAAU,gBACXS,GAAIA,EACJL,MACI,CACIc,OAAgB,IAARR,EACRS,MAAOF,EACPG,SAAUC,KAAKV,IAAIM,EAAW,EAAG,MAIxCP,ICCEY,G,MAlBC,SAAClC,GAAW,IAGpBmC,EAEAnC,EAFAmC,KACAC,EACApC,EADAoC,YAGJ,OACI,yBAAKxB,UAAS,kBACCwB,GACXpB,MAAO,CACHmB,KAAK,GAAD,OAAKA,EAAL,W,wBCXL,aAAa,IAAD,EACCE,oBAAS,GADV,mBAChBC,EADgB,KACVC,EADU,KAEjBC,EAAc,kBAAMD,GAAQ,IAClC,OACI,kBAACE,EAAA,EAAD,CAAOC,KAAMJ,EAAMK,OAAQH,EAAaI,WAAW,EAAOtC,KAAK,MAC3D,kBAACmC,EAAA,EAAM1C,OAAP,CAAc8C,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,oCAEJ,kBAACL,EAAA,EAAMM,KAAP,KACA,6DACmC,mDADnC,IAC+D,+FAD/D,KAGA,yCACe,4CADf,eAC+C,mDAD/C,8BACqG,iDADrG,6FAIA,2EAC+C,+CAD/C,mEAGA,oFAC0D,oDAD1D,sMAIA,iKAKA,kBAACN,EAAA,EAAMO,OAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,QAAS0B,GAAnC,+BCTDW,MArBf,SAAgBnD,GAAQ,IAEhBQ,EAGAR,EAHAQ,UACAD,EAEAP,EAFAO,OACA6C,EACApD,EADAoD,QAEJ,OACI,yBAAKxC,UAAU,UACVwC,EAAQC,KAAI,SAACC,EAAQC,GAClB,OACI,yBAAK3C,UAAU,SAAS4C,IAAKD,GACxBD,EAAO,IAAM,EACV,4BAAI,2BAAIA,EAAO,IAAf,gBAAmC,2BAAIA,EAAO,GAAX,MACjC,4BAAI,2BAAIA,EAAO,IAAf,6BAIjB9C,GAAa,yBAAKI,UAAU,IAAf,iBAAiCL,KCnBrDkD,EAAK,uCAAG,WAAQC,GAAR,SAAAC,EAAA,+EACH,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASH,OADxC,2CAAH,sDAILK,EAAoB,SAACR,EAAOS,GAC9B,IAAMnC,EAAWI,KAAKgC,MAAM,IAAOD,GACnC,OAASnC,EAAW,GAAM0B,EAAS1B,EAAW,G,4CCHlD,WACIqC,EACA3D,EACA4D,GAHJ,qCAAAR,EAAA,sDAIIS,EAJJ,+BAIiB,EAGP9D,EAAO4D,EAAIG,OACbC,EAAa,KACRC,EAAIH,EATjB,YAS6BG,EAAIjE,GATjC,wBAUQgE,EAAaE,SAASC,eAAeF,GACrCJ,EAAY,CAAEhC,KAAM4B,EAAkBQ,EAAGjE,KAXjD,SAYcmD,EAAMiB,KAZpB,cAaQJ,EAAWK,UAAUC,IAAI,cAbjC,UAccnB,EAhBA,KAEd,WAeQa,EAAWK,UAAUE,OAAO,gBACvBX,EAAIK,GAAKhE,GAhBtB,wBAiBY+D,EAAWK,UAAUC,IAAI,WAjBrC,UAkBkBnB,EApBJ,KAEd,QAmBYa,EAAWK,UAAUE,OAAO,WAC5BP,EAAWK,UAAUC,IAAI,YApBrC,2BAsBiBV,EAAIK,KAAOhE,EAtB5B,iBAwBa,IADD+D,EAAWK,UAAUC,IAAI,aACfE,EAAIP,EAAI,EAAGO,EAAIxE,EAAMwE,IAC1BN,SAASC,eAAeK,GAAGH,UAAUC,IAAI,YAzB1D,yBA2BmBL,GA3BnB,aA6BgBL,EAAIK,GAAKhE,GA7BzB,kCA8BkBkD,EAhCJ,KAEd,QA+BY,IAAQqB,EAAEP,EAAGO,EAAGxE,EAAMwE,IAClBN,SAASC,eAAeK,GAAGH,UAAUC,IAAI,YAhCzD,0BAkCoB,GAlCpB,yBAoCcnB,EAtCA,KAEd,QASuCc,IATvC,iDAsCY,GAtCZ,6C,sBA0CerE,M,4FC1Cf,WACIgE,EACA3D,EACAwE,EACAC,EACAb,GALJ,2BAAAR,EAAA,sDAUI,GAHMrD,EAAO4D,EAAIG,OACblC,EAAO,EACP8C,EAAQf,EAAIG,OAAS,EACrBU,GAAeC,EAGf,IAFA7C,EAAO4C,EAEED,GADTG,EAAQD,GACa,EAAGF,EAAIxE,EAAMwE,IAC9BN,SAASC,eAAeK,GAAGH,UAAUC,IAAI,YAdrD,IAAAjB,EAAA,kDAAAA,EAAA,6DAmBYuB,EAAMjD,KAAKgC,OAAO9B,EAAO8C,GAAS,GAChCE,EAASX,SAASC,eAAeS,GACjCE,EAAUZ,SAASC,eAAetC,GAClCkD,EAAWb,SAASC,eAAeQ,GACzCd,EAAY,CACRhC,KAAM4B,EAAkB5B,EAAM7B,GAC9B2E,MAAOlB,EAAkBkB,EAAO3E,KAzB5C,SA2BcmD,EA7BA,KAEd,cA4BQ2B,EAAQT,UAAUC,IAAI,QACtBS,EAASV,UAAUC,IAAI,QA7B/B,UA8BcnB,EAhCA,KAEd,eA+BQU,EAAY,CAAEe,IAAKnB,EAAkBmB,EAAK5E,KA/BlD,UAgCcmD,EAlCA,KAEd,eAiCQ0B,EAAOR,UAAUC,IAAI,cAjC7B,UAkCcnB,EApCA,KAEd,WAmCQ0B,EAAOR,UAAUE,OAAO,cACxBM,EAAOR,UAAUC,IAAIV,EAAIgB,KAAS3E,EAAS,YAAc,WACrD2D,EAAIgB,KAAS3E,EArCzB,iBAuCY,IAAQuE,EAAE3C,EAAM2C,EAAGG,EAAO,EAAGH,IACrBZ,EAAIY,KAAOvE,IACXiE,SAASC,eAAeK,GAAGlE,UAAY,0BAzC3D,4BA4CmBsE,IA5CnB,QA8Ca,GAAIhB,EAAIgB,GAAO3E,EAEhB,IAFwB,WAEfgE,GACLT,YAAW,WACPU,SAASC,eAAeF,GAAGI,UAAUC,IAAI,cAC1CF,MAHEH,EADTU,EAAQC,EAAM,EACMX,EAAIjE,EAAMiE,IAAM,EAA3BA,QAQT,IADApC,EAAO+C,EAAM,EADZ,WAEQX,GACLT,YAAW,WACPU,SAASC,eAAeF,GAAGI,UAAUC,IAAI,cAC1CF,MAHEH,EAAI,EAAGA,EAAIpC,EAAMoC,IAAM,EAAvBA,GAxDrB,yBA+Dcd,EAjEA,KAEd,QAgEQK,YAAW,WACPqB,EAAOR,UAAUE,OAAO,WACxBO,EAAQT,UAAUE,OAAO,QACzBQ,EAASV,UAAUE,OAAO,UArExB,KAEd,uDAkBW1C,GAAQ8C,GAlBnB,sKAuEI,IAASH,EAAI3C,EAAM2C,EAAIG,EAAQ,EAAGH,IAC9BN,SAASC,eAAeK,GAAGlE,UAAY,yBAxE/C,0BA0EY,GA1EZ,6C,sBA4EeP,M,gGC3Ef,WACI6D,EACA3D,EACA4D,GAHJ,+BAAAR,EAAA,yDAKUrD,EAAO4D,EAAIG,OACbiB,EAAOrD,KAAKgC,MAAMhC,KAAKsD,KAAKjF,IAC5BkF,EAAQ,EACRC,EAAMH,EACG,IAAThF,EATR,uBAUQkE,SAASC,eAAe,GAAGzD,MAAM0E,gBAAkB,QAV3D,mBAWgB,GAXhB,YAaWxB,EAAIuB,GAAOlF,GAbtB,wBAcQ4D,EAAY,CACRhC,KAAM4B,EAAkByB,EAAOlF,GAC/B2E,MAAOlB,EAAkB0B,EAAKnF,KAhB1C,UAkBcmD,EAAMiB,KAlBpB,aAmBYR,EAAIsB,GAASjF,GAnBzB,2CAoBoB,GApBpB,eAsBQiF,EAAQC,EACRA,EAAMxD,KAAKV,IAAIkE,EAAMH,EAAMhF,EAAO,GAClC6D,EAAY,CACRhC,KAAM4B,EAAkByB,EAAOlF,GAC/B2E,MAAOlB,EAAkB0B,EAAKnF,KA1B1C,UA6BcmD,EAAM,KA7BpB,QAgCQ,IAFAe,SAASC,eAAee,GAAOb,UAAUC,IAAI,YAC7CJ,SAASC,eAAegB,GAAKd,UAAUC,IAAI,YA/BnD,WAgCiBL,GACLT,YAAW,WACPU,SAASC,eAAeF,GAAGI,UAAUC,IAAI,cAC1C,MAHEL,EAAI,EAAGA,EAAIiB,EAAOjB,IAAM,EAAxBA,GAhCjB,KAsCYL,EAAIuB,GAAOlF,GAAUkF,IAAQnF,EAAO,GAtChD,iBAuCY,IAvCZ,WAuCqBiE,GACLT,YAAW,WACPU,SAASC,eAAeF,GAAGI,UAAUC,IAAI,cAC1CF,MAHEH,EAAIiB,EAAOjB,EAAIkB,EAAKlB,IAAM,EAA1BA,GAvCrB,0BA4CoB,GA5CpB,yBA+Ccd,EAAMiB,KA/CpB,gDAiDUjB,EAnDI,KAEd,QAkDI,IAASc,EAAIkB,EAAM,EAAGlB,EAAIjE,EAAMiE,IAC5BC,SAASC,eAAeF,GAAGI,UAAUC,IAAI,YAnDjD,iBAqDUnB,EAAM,KArDhB,iCAsDWvD,EAAagE,EAAK3D,EAAQ4D,EAAaqB,IAtDlD,6C,sBA0DerF,M,gDCnCAC,EAvBQ,uCAAI,WAAO8D,EAAK3D,EAAQ4D,GAApB,qBAAAR,EAAA,yDACjBrD,EAAO4D,EAAIG,OACdH,EAAI,KAAO3D,EAFS,uBAGnBiE,SAASC,eAAe,GAAGzD,MAAM0E,gBAAkB,QAHhC,kBAIZ,GAJY,OAMnBnB,EAAI,EACJD,OAAaqB,EAPM,YAQhBpB,EAAIjE,GAAQ4D,EAAIK,IAAMhE,GARN,wBASnB+D,EAAaE,SAASC,eAAeF,GACrCJ,EAAY,CAAChC,KAAM4B,EAAkBQ,EAAGjE,KAVrB,UAWbmD,EAZA,KACa,eAYnBa,EAAWK,UAAUC,IAAI,YAZN,UAabnB,EAdA,KACa,QAcnB,IAAQqB,EAAE,EAAGA,EAAIP,EAAGO,IAChBN,SAASC,eAAeK,GAAGH,UAAUC,IAAI,YAE7CL,GAAQ,EAjBW,wCAmBjBd,EApBI,KACa,iCAoBhBpD,EAAa6D,EAAK3D,EAAQgE,EAAE,EAAGtC,KAAKV,IAAIgD,EAAGjE,EAAK,GAAI6D,IApBpC,4CAAJ,0DC4LvB,SAASyB,EAAoBtF,GAEzB,IADA,IAAM4D,EAAM,GACHK,EAAI,EAAGA,EAAIjE,EAAMiE,IACtBL,EAAI2B,KAAKC,KAEb,OAAO5B,EAIX,SAAS6B,EAAU7B,GAEf,OADoBA,EAAI8B,QAAQC,MAAK,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,KAIvD,SAASJ,IACL,OAAO7D,KAAKgC,MAAsB,IAAhBhC,KAAKkE,UAGZC,M,4MAhMXC,MAAQ,CACJnC,IAAK,GACLoC,MAAO,IACP/F,OAAQuF,IACRxF,KAAM,GACNuB,SAAU,GACVkD,aAAc,GACdC,cAAe,GACfuB,YAAa,GACb/F,WAAW,EACX4C,QAAS,I,EAIbe,YAAc,YAA2B,IAAxBhC,EAAuB,EAAvBA,KAAM8C,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtB/C,GACA,EAAKqE,SAAS,CAAEzB,YAAa5C,IAE7B8C,GACA,EAAKuB,SAAS,CAAExB,aAAcC,IAE9BC,GACA,EAAKsB,SAAS,CAAED,WAAYrB,K,EAMpCxE,UAAY,SAACY,GACLA,EACA,EAAKkF,SAAS,CAAEjG,OAAQkG,SAASnF,KAE/B,EAAKkF,SAAS,CAAEjG,OAAQ,M,EAElCE,a,uCAAe,WAAOkB,GAAP,iBAAAgC,EAAA,6DACLrD,EAAOqB,EAAMpB,OAAOe,MACpBO,EAAWI,KAAKgC,MAAM,IAAO3D,GAFxB,SAGL,EAAKkG,SAAS,CAAElG,KAAMA,EAAMuB,SAAUA,IAHjC,OAIX,EAAK5B,mBAJM,2C,wDAMfA,iB,sBAAmB,8BAAA0D,EAAA,6DACPrD,EAAS,EAAK+F,MAAd/F,KACR,EAAKkG,SAAS,CAAEtC,IAAK,KAFN,SAGT,EAAKsC,SAAS,CAChBtC,IAAK6B,EAAUH,EAAoBtF,IACnCyE,aAAc,GACdC,cAAe,GACfuB,YAAa,GACbnD,QAAS,KARE,OAUf,IAASmB,EAAI,EAAGA,EAAI,EAAK8B,MAAMnC,IAAIG,OAAQE,IACvCC,SAASC,eAAeF,GAAG3D,UAAY,gBAX5B,2C,EAenB8F,cAAgB,WACZ,EAAKvC,YAAY,CACbhC,MAAO,GACP+C,KAAM,GACND,OAAQ,M,EAIhB/E,a,sBAAe,oCAAAyD,EAAA,6DACX,EAAK6C,SAAS,CAAEhG,WAAW,IADhB,EAEsB,EAAK6F,MAA9BnC,EAFG,EAEHA,IAAK3D,EAFF,EAEEA,OAAQ6C,EAFV,EAEUA,QAFV,SAGSlD,EAAagE,EAAK3D,EAAQ,EAAK4D,aAHxC,OAGLZ,EAHK,OAIXH,EAAQyC,KAAK,CAACtF,EAAQgD,IACtB,EAAKmD,gBACL,EAAKF,SAAS,CAAEhG,WAAW,EAAO4C,QAASA,IANhC,2C,EAQf/C,a,sBAAe,oCAAAsD,EAAA,6DACX,EAAK6C,SAAS,CAAEhG,WAAW,IADhB,EAEsB,EAAK6F,MAA9BnC,EAFG,EAEHA,IAAK3D,EAFF,EAEEA,OAAQ6C,EAFV,EAEUA,QAFV,SAGS/C,EAAa6D,EAAK3D,EAAQ,KAAM,KAAM,EAAK4D,aAHpD,OAGLZ,EAHK,OAIXH,EAAQyC,KAAK,CAACtF,EAAQgD,IACtB,EAAKmD,gBACL,EAAKF,SAAS,CAAEhG,WAAW,EAAO4C,QAASA,IANhC,2C,EAQfjD,W,sBAAa,oCAAAwD,EAAA,6DACT,EAAK6C,SAAS,CAAEhG,WAAW,IADlB,EAEwB,EAAK6F,MAA9BnC,EAFC,EAEDA,IAAK3D,EAFJ,EAEIA,OAAQ6C,EAFZ,EAEYA,QAFZ,SAGWjD,EAAW+D,EAAK3D,EAAQ,EAAK4D,aAHxC,OAGHZ,EAHG,OAITH,EAAQyC,KAAK,CAACtF,EAAQgD,IACtB,EAAKmD,gBACL,EAAKF,SAAS,CAAEhG,WAAW,EAAO4C,QAASA,IANlC,2C,EASbhD,kB,sBAAoB,oCAAAuD,EAAA,6DAChB,EAAK6C,SAAS,CAAEhG,WAAW,IADX,EAEiB,EAAK6F,MAA9BnC,EAFQ,EAERA,IAAK3D,EAFG,EAEHA,OAAQ6C,EAFL,EAEKA,QAFL,SAGIhD,EAAkB8D,EAAK3D,EAAQ,EAAK4D,aAHxC,OAGVZ,EAHU,OAIhBH,EAAQyC,KAAK,CAACtF,EAAQgD,IACtB,EAAKmD,gBACL,EAAKF,SAAS,CAAEhG,WAAW,EAAO4C,QAASA,IAN3B,2C,kEA9DhBuD,KAAK1G,qB,+BAuEC,IAAD,EAQD0G,KAAKN,MANLnC,EAFC,EAEDA,IACA5D,EAHC,EAGDA,KACAC,EAJC,EAIDA,OACAsB,EALC,EAKDA,SACArB,EANC,EAMDA,UACA4C,EAPC,EAODA,QAEJ,OACI,yBAAKpC,MAAO,CAAE4F,SAAU,WAAY3F,UAAW,GAAI4F,WAAY,MAC3D,kBAAC,EAAD,CACIvG,KAAMA,EACNC,OAAQA,EACRE,aAAckG,KAAKlG,aACnBJ,aAAcsG,KAAKtG,aACnBD,kBAAmBuG,KAAKvG,kBACxBF,aAAcyG,KAAKzG,aACnBD,iBAAkB0G,KAAK1G,iBACvBE,WAAYwG,KAAKxG,WACjBO,UAAWiG,KAAKjG,UAChBF,UAAWmG,KAAKN,MAAM7F,YAE1B,kBAAC,EAAD,CACIA,UAAWA,EACX4C,QAASA,EACT7C,OAAQA,IAEZ,kBAAC,EAAD,MACA,yBAAKK,UAAU,OACV+F,KAAKN,MAAMnC,IAAIb,KAAI,SAAC/B,EAAOiC,GAAR,OAChB,kBAAC,EAAD,CACIjC,MAAOA,EACPkC,IAAKD,EACL1B,SAAUA,EACVR,GAAIkC,QAIhB,yBAAK3C,UAAU,OACVsD,EAAIb,KAAI,SAAC/B,EAAOiC,GAAR,OACL,yBACI3C,UAAU,YACV4C,IAAG,UAAKlC,EAAL,cAAgBiC,GACnBvC,MAAO,CAAEe,MAAOF,EAAUG,SAAUC,KAAKV,IAAIM,EAAW,EAAG,MAE1D0B,OAIb,yBACI3C,UAAU,MACVI,MAAO,CAAEe,OAAQF,EAAW,GAAKvB,EAAMsG,SAAU,WAAYlB,gBAAiB,UAE7EiB,KAAKN,MAAM7F,WACR,kBAAC,IAAMsG,SAAP,KACI,kBAAC,EAAD,CACI3E,KAAMwE,KAAKN,MAAMtB,YACjB3C,YAAY,iBAEhB,kBAAC,EAAD,CACID,KAAMwE,KAAKN,MAAMrB,aACjB5C,YAAY,kBAEhB,kBAAC,EAAD,CACID,KAAMwE,KAAKN,MAAME,WACjBnE,YAAY,uB,GArKxB2E,IAAMC,WCJXC,MARf,WACE,OACE,yBAAKrG,UAAU,aACb,kBAAC,EAAD,QCHNsG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5C,SAASC,eAAe,W","file":"static/js/main.51455b12.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = props => {\r\n    const {\r\n        generateNewArray,\r\n        linearSearch,\r\n        jumpSearch,\r\n        exponentialSearch,\r\n        binarySearch,\r\n        size,\r\n        target,\r\n        isRunning,\r\n        handleChange,\r\n        setTarget\r\n    } = props;\r\n    const searchDisabled = isRunning || !(target >= 0) || target === \"\";\r\n\r\n    return (\r\n        <div className=\"buttons bg-secondary\">\r\n            <button className=\"btn btn-primary\" disabled={isRunning} onClick={generateNewArray}>Generate Sorted Array</button>\r\n            <label htmlFor=\"size\" style={{ marginTop: 8, color: \"white\" }}>Array Size</label>\r\n            <input\r\n                disabled={isRunning}\r\n                name=\"size\"\r\n                className=\"slider\"\r\n                type=\"range\"\r\n                id=\"size\"\r\n                value={size}\r\n                min=\"10\"\r\n                max=\"300\"\r\n                onChange={handleChange}\r\n            />\r\n            <div>\r\n                <input\r\n                    disabled={isRunning}\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    placeholder=\"Target Value..\"\r\n                    className=\"form-control\"\r\n                    value={target}\r\n                    onChange={(event) => setTarget(event.target.value)}\r\n                />\r\n            </div>\r\n            <button\r\n                className=\"btn btn-dark\"\r\n                disabled={searchDisabled}\r\n                onClick={linearSearch}\r\n            >\r\n                Linear Search\r\n            </button>\r\n            <button\r\n                className=\"btn btn-dark\"\r\n                disabled={searchDisabled}\r\n                onClick={jumpSearch}>\r\n                Jump  Search\r\n            </button>\r\n            <button\r\n                className=\"btn btn-dark\"\r\n                disabled={searchDisabled}\r\n                onClick={binarySearch}\r\n            >\r\n                Binary Search\r\n            </button>\r\n            \r\n            <button\r\n                className=\"btn btn-dark\"\r\n                disabled={searchDisabled}\r\n                onClick={exponentialSearch}\r\n            >\r\n                Exponential Search\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Bar = (props) => {\r\n    const {\r\n        value,\r\n        id,\r\n        barWidth\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"box box-value\"\r\n            id={id}\r\n            style={\r\n                {\r\n                    height: value * 1.5,\r\n                    width: barWidth,\r\n                    fontSize: Math.min(barWidth / 2, 15)\r\n                }\r\n            }\r\n        >\r\n            {value}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Bar;","import React from \"react\";\r\nimport './Pointer.css'\r\n\r\nconst Pointer = (props) => {\r\n\r\n    const {\r\n        left,\r\n        pointerType,\r\n    } = props\r\n\r\n    return (\r\n        <div className={\r\n            `pointer ${pointerType}`} \r\n            style={{ \r\n                left: `${left}px`, \r\n            }}>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pointer;","import React, { useState } from \"react\";\r\nimport { Modal, Button} from \"react-bootstrap\";\r\n\r\nexport default function () {\r\n    const [open, setOpen] = useState(true);\r\n    const handleClose = () => setOpen(false)\r\n    return (\r\n        <Modal show={open} onHide={handleClose} animation={false} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Meet Searching Algorithms!</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <p>\r\n                This app covers 4 most popular <b>Searching Algorithms</b>:<b>Linear Search, Jump Search, Binary Search and Exponential Search</b>.\r\n            </p>           \r\n            <p>\r\n                Apart from <b>Linear search</b> which is a <b>sequential algorithm</b>, all other algorithms use <b>divide-and-conquer</b> technique to search for the value.\r\n                They are also much more efficient than Linear search.\r\n            </p>\r\n            <p>\r\n              The elements of the array are represented by <b>rectangular bars</b> where the height of the bar represents its value in the array.\r\n            </p>\r\n            <p>\r\n                You can generate a random array by simply clicking on <b>Generate Sorted Array</b> button.\r\n                By default,  a sorted array and a target value are randomly generated. The size of the array is initially set to 50. You can resize the length of the array within the range of 10 - 200. \r\n            </p>\r\n            <p>\r\n                You can search for a value in the array using one algorithm at time. \r\n                When an algorithm is running, all user actions are disabled.\r\n            </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    See Algorithms In Action\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}","import React from \"react\";\r\n\r\nfunction Status(props) {\r\n    const {\r\n        isRunning,\r\n        target,\r\n        results\r\n    } = props;\r\n    return (\r\n        <div className=\"status\">\r\n            {results.map((result, index) => {\r\n                return (\r\n                    <div className=\"result\" key={index}>\r\n                        {result[1] > -1 ?\r\n                            <h6><b>{result[0]}</b> is at index <b>{result[1]}.</b></h6>\r\n                            : <h6><b>{result[0]}</b> is not in the array.</h6>}\r\n                    </div>\r\n                )\r\n            })}\r\n            {isRunning && <div className=\"\">Searching for {target}</div>}\r\n        </div>\r\n    )\r\n};\r\nexport default Status;","const sleep = async ( ms ) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms))\r\n}\r\n\r\nconst calculatePosition = (index, n) => {\r\n    const barWidth = Math.floor(1000 / n)\r\n    return ((barWidth + 1)  * index) + barWidth / 2\r\n    \r\n}\r\n\r\nconst colors = {\r\n    midColor : \"red\",\r\n    edgeColor : \"turquoise\"\r\n}\r\n\r\nexport {\r\n    sleep,\r\n    calculatePosition,\r\n    colors\r\n}","import { sleep, calculatePosition } from \"./utils\"\r\nconst delay = 200\r\n\r\nasync function linearSearch(\r\n    arr,\r\n    target,\r\n    setPointers,\r\n    startIndex = 0\r\n) { \r\n   \r\n    const size = arr.length;\r\n    let currentDiv = null;\r\n    for (let i = startIndex; i < size; i++) {\r\n        currentDiv = document.getElementById(i);\r\n        setPointers({ left: calculatePosition(i, size) })\r\n        await sleep(delay * 1.5)\r\n        currentDiv.classList.add(\"mid-violet\");\r\n        await sleep(delay);\r\n        currentDiv.classList.remove(\"mid-violet\")\r\n         if (arr[i] < target){\r\n            currentDiv.classList.add(\"mid-red\");\r\n            await sleep(delay);\r\n            currentDiv.classList.remove(\"mid-red\");\r\n            currentDiv.classList.add(\"searched\");\r\n        }\r\n        else if (arr[i] === target) {\r\n            currentDiv.classList.add(\"mid-green\")\r\n             for (let k = i + 1; k < size; k++) {\r\n                 document.getElementById(k).classList.add(\"searched\")\r\n             };\r\n            return i\r\n        }\r\n        else if(arr[i] > target ){\r\n            await sleep(delay)\r\n            for(let k=i; k <size; k++){\r\n                document.getElementById(k).classList.add(\"searched\")\r\n            }\r\n            return -1\r\n        } ;\r\n        await sleep(delay)\r\n    };\r\n    return -1\r\n}\r\n\r\n\r\nexport default linearSearch;","import { sleep, calculatePosition } from \"./utils\"\r\nconst delay = 500\r\n\r\nasync function binarySearch(\r\n    arr,\r\n    target,\r\n    leftPointer,\r\n    rightPointer,\r\n    setPointers\r\n) {\r\n    const size = arr.length\r\n    let left = 0;\r\n    let right = arr.length - 1;\r\n    if (leftPointer && rightPointer) {\r\n        left = leftPointer;\r\n        right = rightPointer;\r\n        for (let k = right + 1; k < size; k++) {\r\n            document.getElementById(k).classList.add(\"searched\")\r\n        }\r\n    }\r\n\r\n    while (left <= right) {\r\n        let mid = Math.floor((left + right) / 2)\r\n        const midDiv = document.getElementById(mid);\r\n        const leftDiv = document.getElementById(left);\r\n        const rightDiv = document.getElementById(right)\r\n        setPointers({\r\n            left: calculatePosition(left, size),\r\n            right: calculatePosition(right, size),\r\n        })\r\n        await sleep(delay)\r\n        leftDiv.classList.add(\"edge\");\r\n        rightDiv.classList.add(\"edge\");\r\n        await sleep(delay)\r\n        setPointers({ mid: calculatePosition(mid, size) })\r\n        await sleep(delay)\r\n        midDiv.classList.add(\"mid-violet\");\r\n        await sleep(delay)\r\n        midDiv.classList.remove(\"mid-violet\");\r\n        midDiv.classList.add(arr[mid] === target ? \"mid-green\" : \"mid-red\");\r\n        if (arr[mid] === target) {\r\n            // give other bars a light color\r\n            for(let k=left; k <right +1; k++){\r\n                if( arr[k] !== target){\r\n                    document.getElementById(k).className = \"box box-value searched\";\r\n                }\r\n            }\r\n            return mid\r\n        }\r\n        else if (arr[mid] > target) {\r\n            right = mid - 1;\r\n            for (let i = right; i < size; i++) {\r\n                setTimeout(() => {\r\n                    document.getElementById(i).classList.add(\"searched\");\r\n                }, delay * 2);\r\n            };\r\n        }\r\n        else {\r\n            left = mid + 1;\r\n            for (let i = 0; i < left; i++) {\r\n                setTimeout(() => {\r\n                    document.getElementById(i).classList.add(\"searched\");\r\n                }, delay * 2);\r\n            }\r\n\r\n        };\r\n        await sleep(delay)\r\n        setTimeout(() => {\r\n            midDiv.classList.remove(\"mid-red\");\r\n            leftDiv.classList.remove(\"edge\");\r\n            rightDiv.classList.remove(\"edge\");\r\n        }, delay);\r\n    };\r\n    // give all bars a light color\r\n    for (let k = left; k < right + 1; k++) {\r\n        document.getElementById(k).className = \"box box-value searched\";\r\n    }\r\n    return -1\r\n};\r\nexport default binarySearch;","import linearSearch from \"./linearSearch\";\r\nimport { calculatePosition, sleep } from \"./utils\"\r\nconst delay = 500;\r\n\r\nasync function jumpSearch(\r\n    arr,\r\n    target,\r\n    setPointers\r\n) {\r\n    const size = arr.length;\r\n    let step = Math.floor(Math.sqrt(size));\r\n    let start = 0;\r\n    let end = step;\r\n    if (size === 0) {\r\n        document.getElementById(0).style.backgroundColor = \"green\";\r\n        return -1\r\n    }\r\n    while (arr[end] < target) {\r\n        setPointers({\r\n            left: calculatePosition(start, size),\r\n            right: calculatePosition(end, size)\r\n        })\r\n        await sleep(delay / 2)\r\n        if (arr[start] > target) {\r\n            return -1\r\n        };\r\n        start = end;\r\n        end = Math.min(end + step, size - 1);\r\n        setPointers({\r\n            left: calculatePosition(start, size),\r\n            right: calculatePosition(end, size)\r\n        });\r\n        // wait for pointers to move\r\n        await sleep(500);\r\n        document.getElementById(start).classList.add(\"interval\");\r\n        document.getElementById(end).classList.add(\"interval\");\r\n        for (let i = 0; i < start; i++) {\r\n            setTimeout(() => {\r\n                document.getElementById(i).classList.add(\"searched\")\r\n            }, 100);\r\n        }\r\n        // check if the end of the array has been reached\r\n        if (arr[end] < target && end === size - 1) {\r\n            for (let i = start; i < end; i++) {\r\n                setTimeout(() => {\r\n                    document.getElementById(i).classList.add(\"searched\")\r\n                }, delay / 2);\r\n            }\r\n            return -1\r\n        };\r\n        // wait \r\n        await sleep(delay / 4)\r\n    }\r\n    await sleep(delay);\r\n    for (let i = end + 1; i < size; i++) {\r\n        document.getElementById(i).classList.add(\"searched\")\r\n    }\r\n    await sleep(100);\r\n    return linearSearch(arr, target, setPointers, start)\r\n\r\n}\r\n\r\nexport default jumpSearch;\r\n\r\n","import binarySearch from \"./binarySearch\";\r\nimport  { sleep, calculatePosition} from \"./utils\";\r\n\r\nconst delay = 500\r\nconst exponentialSearch  = async (arr, target, setPointers) => {\r\n    const size = arr.length\r\n    if(arr[0] === target){\r\n        document.getElementById(0).style.backgroundColor = \"green\"\r\n        return 0\r\n    }\r\n    let i = 1;\r\n    let currentDiv = undefined;\r\n    while (i < size && arr[i] <= target){\r\n        currentDiv = document.getElementById(i)\r\n        setPointers({left: calculatePosition(i, size)});\r\n        await sleep(delay)\r\n        currentDiv.classList.add(\"interval\")\r\n        await sleep(delay)\r\n        for(let k=0; k < i; k++){\r\n            document.getElementById(k).classList.add(\"searched\");\r\n        };\r\n        i = i * 2;\r\n    }\r\n    await sleep(delay)\r\n    return binarySearch(arr, target, i/2, Math.min(i, size-1), setPointers)\r\n}\r\n\r\nexport default exponentialSearch;","import React from \"react\";\r\nimport \"./Main.css\";\r\nimport Header from \"./Header\";\r\nimport Bar from \"./Bar\";\r\nimport Pointer from \"../pointer\";\r\nimport Intro from \"../intro\";\r\nimport Status from \"./Status\";\r\nimport {\r\n    linearSearch,\r\n    binarySearch,\r\n    jumpSearch,\r\n    exponentialSearch\r\n} from \"../../algorithms\";\r\n\r\n\r\n\r\nclass Board extends React.Component {\r\n\r\n    state = {\r\n        arr: [],\r\n        speed: 100,\r\n        target: generateRandomNumber(),\r\n        size: 50,\r\n        barWidth: 20,\r\n        leftPointer: -75,\r\n        rightPointer: -50,\r\n        midPointer: -25,\r\n        isRunning: false,\r\n        results: [],\r\n    }\r\n\r\n\r\n    setPointers = ({ left, right, mid }) => {\r\n        if (left) {\r\n            this.setState({ leftPointer: left })\r\n        }\r\n        if (right) {\r\n            this.setState({ rightPointer: right })\r\n        }\r\n        if (mid) {\r\n            this.setState({ midPointer: mid })\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        this.generateNewArray();\r\n    };\r\n    setTarget = (value) => {\r\n        if (value) {\r\n            this.setState({ target: parseInt(value) })\r\n        }\r\n        else (this.setState({ target: \"\" }))\r\n    }\r\n    handleChange = async (event) => {\r\n        const size = event.target.value\r\n        const barWidth = Math.floor(1000 / size)\r\n        await this.setState({ size: size, barWidth: barWidth })\r\n        this.generateNewArray()\r\n    }\r\n    generateNewArray = async () => {\r\n        const { size } = this.state\r\n        this.setState({ arr: [] })\r\n        await this.setState({\r\n            arr: sortedArr(generateRandomArray(size)),\r\n            leftPointer: -75,\r\n            rightPointer: -25,\r\n            midPointer: -50,\r\n            results: []\r\n        });\r\n        for (let i = 0; i < this.state.arr.length; i++) {\r\n            document.getElementById(i).className = \"box box-value\";\r\n        }\r\n    }\r\n\r\n    resetPointers = () => {\r\n        this.setPointers({\r\n            left: -75,\r\n            mid: -50,\r\n            right: -25\r\n        })\r\n    }\r\n\r\n    linearSearch = async () => {\r\n        this.setState({ isRunning: true })\r\n        const { arr, target, results } = this.state;\r\n        const index = await linearSearch(arr, target, this.setPointers);\r\n        results.push([target, index])\r\n        this.resetPointers()\r\n        this.setState({ isRunning: false, results: results })\r\n    }\r\n    binarySearch = async () => {\r\n        this.setState({ isRunning: true });\r\n        const { arr, target, results } = this.state;\r\n        const index = await binarySearch(arr, target, null, null, this.setPointers)\r\n        results.push([target, index]);\r\n        this.resetPointers()\r\n        this.setState({ isRunning: false, results: results })\r\n    };\r\n    jumpSearch = async () => {\r\n        this.setState({ isRunning: true })\r\n        const { arr, target, results } = this.state;\r\n        const index = await jumpSearch(arr, target, this.setPointers)\r\n        results.push([target, index])\r\n        this.resetPointers()\r\n        this.setState({ isRunning: false, results: results })\r\n    };\r\n\r\n    exponentialSearch = async () => {\r\n        this.setState({ isRunning: true })\r\n        const { arr, target, results } = this.state;\r\n        const index = await exponentialSearch(arr, target, this.setPointers)\r\n        results.push([target, index])\r\n        this.resetPointers()\r\n        this.setState({ isRunning: false, results: results })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            arr,\r\n            size,\r\n            target,\r\n            barWidth,\r\n            isRunning,\r\n            results\r\n        } = this.state;\r\n        return (\r\n            <div style={{ position: \"relative\", marginTop: 60, marginLeft: 150 }}>\r\n                <Header\r\n                    size={size}\r\n                    target={target}\r\n                    handleChange={this.handleChange}\r\n                    binarySearch={this.binarySearch}\r\n                    exponentialSearch={this.exponentialSearch}\r\n                    linearSearch={this.linearSearch}\r\n                    generateNewArray={this.generateNewArray}\r\n                    jumpSearch={this.jumpSearch}\r\n                    setTarget={this.setTarget}\r\n                    isRunning={this.state.isRunning}\r\n                />\r\n                <Status\r\n                    isRunning={isRunning}\r\n                    results={results}\r\n                    target={target}\r\n                />\r\n                <Intro />\r\n                <div className=\"row\">\r\n                    {this.state.arr.map((value, index) => (\r\n                        <Bar\r\n                            value={value}\r\n                            key={index}\r\n                            barWidth={barWidth}\r\n                            id={index}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div className=\"row\" >\r\n                    {arr.map((value, index) => (\r\n                        <div\r\n                            className=\"box index\"\r\n                            key={`${value} - ${index}`}\r\n                            style={{ width: barWidth, fontSize: Math.min(barWidth / 2, 15) }}\r\n                        >\r\n                            {index}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div\r\n                    className=\"row\"\r\n                    style={{ width: (barWidth + 1) * size, position: \"relative\", backgroundColor: \"green\" }}\r\n                >\r\n                    {this.state.isRunning &&\r\n                        <React.Fragment>\r\n                            <Pointer\r\n                                left={this.state.leftPointer}\r\n                                pointerType=\"left-pointer\"\r\n                            />\r\n                            <Pointer\r\n                                left={this.state.rightPointer}\r\n                                pointerType=\"right-pointer\"\r\n                            />\r\n                            <Pointer\r\n                                left={this.state.midPointer}\r\n                                pointerType=\"mid-pointer\"\r\n                            /></React.Fragment>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction generateRandomArray(size) {\r\n    const arr = []\r\n    for (let i = 0; i < size; i++) {\r\n        arr.push(generateRandomNumber())\r\n    }\r\n    return arr\r\n}\r\n\r\n// naively sort the array\r\nfunction sortedArr(arr) {\r\n    const sortedArray = arr.slice().sort((a, b) => a - b)\r\n    return sortedArray\r\n}\r\n\r\nfunction generateRandomNumber() {\r\n    return Math.floor(Math.random() * 300)\r\n}\r\n\r\nexport default Board;","import React from 'react';\nimport './App.css';\nimport Board from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}